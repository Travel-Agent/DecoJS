{"version":3,"file":"ordnung.js","sources":["../Source/ordnung/utils.js","../Source/ordnung/qvc/ExecutableResult.js","../Source/ordnung/qvc/Constraint.js","../Source/ordnung/qvc/Validator.js","../Source/ordnung/qvc/koExtensions.js","../Source/ordnung/qvc/Validatable.js","../Source/ordnung/qvc/Executable.js","../Source/ordnung/ajax.js","../Source/ordnung/qvc/ConstraintResolver.js","../Source/ordnung/qvc.js","../Source/ordnung/loader.js","../Source/ordnung/proclaimWhen.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('ordnung/utils',[], function(){\r\n\treturn {\r\n\t\ttoArray: function(obj){\r\n\t\t\tvar array = [];\r\n\t\t\t// iterate backwards ensuring that length is an UInt32\r\n\t\t\tfor (var i = obj.length >>> 0; i--;) { \r\n\t\t\t\tarray[i] = obj[i];\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t},\r\n\t\textend: function(dst, src){\r\n\t\t\tsrc = src || {};\r\n\t\t\tdst = dst || {};\r\n\t\t\tfor(var i in src){\r\n\t\t\t\tdst[i] = src[i];\r\n\t\t\t}\r\n\t\t\treturn dst;\r\n\t\t}\r\n\t};\r\n});\r\n","\ndefine('ordnung/qvc/ExecutableResult',[\"ordnung/utils\"], function(utils){\r\n\tfunction ExecutableResult(result){\r\n\t\t\r\n\t\tthis.success = false;\r\n\t\tthis.valid = false;\r\n\t\tthis.result = null;\r\n\t\tthis.exception = null;\r\n\t\tthis.violations = [];\r\n\t\r\n\t\tutils.extend(this, result);\r\n\t\r\n\t};\r\n\t\r\n\treturn ExecutableResult;\r\n});","\ndefine('ordnung/qvc/Constraint',[], function(){\r\n\t\r\n\tfunction Constraint(name, attributes){\t\t\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = attributes;\r\n\t\tthis.message = attributes.message;\r\n\t\t\r\n\t\t\r\n\t\tthis.init(name);\r\n\t}\r\n\t\t\r\n\tConstraint.prototype.init = function(name){\r\n\t\trequire([\"ordnung/qvc/constraints/\" + name], function(Tester){\r\n\t\t\tvar tester = new Tester(this.attributes);\r\n\t\t\tthis.validate = tester.isValid.bind(tester);\r\n\t\t}.bind(this));\r\n\t};\r\n\t\r\n\tConstraint.prototype.validate = function(value){\r\n\t\treturn true;//real test not loaded yet\r\n\t};\r\n\t\r\n\t\r\n\treturn Constraint;\r\n});","\ndefine('ordnung/qvc/Validator',[\"ordnung/qvc/Constraint\", \"knockout\"], function(Constraint, ko){\r\n\tfunction Validator(){\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis.constraints = [];\r\n\t\t\r\n\t\tthis.isValid = ko.observable(true);\r\n\t\tthis.message = ko.observable(\"\");\r\n\t}\r\n\t\r\n\tValidator.prototype.setConstraints = function(constraints){\r\n\t\tthis.constraints = constraints.map(function(constraint){\r\n\t\t\treturn new Constraint(constraint.name, constraint.attributes);\r\n\t\t});\r\n\t};\r\n\t\r\n\tValidator.prototype.reset = function(){\r\n\t\tthis.isValid(true);\r\n\t\tthis.message(\"\");\r\n\t};\r\n\t\r\n\tValidator.prototype.validate = function(value){\r\n\t\tif(this.constraints.length == 0){\r\n\t\t\tthis.reset();\r\n\t\t}else if(this.constraints.every(function (constraint) {\r\n\t\t\tif(constraint.validate(value)){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid(false);\r\n\t\t\t\tthis.message(constraint.message);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}.bind(this))){\r\n\t\t\tthis.isValid(true);\r\n\t\t\tthis.message(\"\");\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn Validator;\r\n});","\ndefine('ordnung/qvc/koExtensions',[\"ordnung/qvc/Validator\", \"knockout\"], function(Validator, ko){\r\n\r\n\tif (ko != null) {\r\n\t\tko.bindingHandlers.validationMessageFor = {\r\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, viewModel) {\r\n\t\t\t\tvar value = valueAccessor();\r\n\t\t\t\tvar validator = value.validator;\r\n\t\t\t\tif (validator) {\r\n\t\t\t\t\tko.applyBindingsToNode(element, { hidden: validator.isValid, text: validator.message }, validator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tko.extenders.validation = function (target, options) {\r\n\t\t\ttarget.validator = new Validator(target, options);\r\n\t\t\ttarget.subscribe(function (newValue) {\r\n\t\t\t\ttarget.validator.validate(newValue);\r\n\t\t\t});\r\n\t\t\treturn target;\r\n\t\t};\r\n\t\t\r\n\t\tko.bindingHandlers.command = ko.bindingHandlers.query = {\r\n\t\t\tinit: function (element, valueAccessor, allBindingAccessor, viewModel) {\r\n\t\t\t\tko.applyBindingsToNode(element, { click: valueAccessor() }, viewModel);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\r\n});","\ndefine('ordnung/qvc/Validatable',[\"ordnung/utils\", \"ordnung/qvc/Validator\", \"knockout\", \"ordnung/qvc/koExtensions\"],function(utils, Validator, ko){\r\n\t\r\n\tfunction recursivlyExtendParameters(parameters, validatableFields) {\r\n\t\tfor (var key in parameters) {\r\n\t\t\tvar property = parameters[key];\r\n\t\t\tif (ko.isObservable(property)) {\r\n\t\t\t\tproperty.extend({ validation: {} });\r\n\t\t\t\tvalidatableFields.push(property);\r\n\t\t\t}\r\n\t\t\tproperty = ko.utils.unwrapObservable(property);\r\n\t\t\tif (typeof property === \"object\") {\r\n\t\t\t\trecursivlyExtendParameters(property, validatableFields);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction findField(fieldPath, parameters, errorMessage){\r\n\t\treturn fieldPath.split(\".\").reduce(function(object, name){\r\n\t\t\tvar path = object.path;\r\n\t\t\tvar field = ko.utils.unwrapObservable(object.field);\r\n\t\t\tif (name in field) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tfield: field[name],\r\n\t\t\t\t\tpath: path + \".\" + name\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(errorMessage + \": \" + fieldPath + \"\\n\" +\r\n\t\t\t\t\tname + \" is not a member of \" + path + \"\\n\" +\r\n\t\t\t\t\tpath + \" = `\" + ko.toJSON(field) + \"`\");\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tfield: parameters,\r\n\t\t\tpath: \"parameters\"\r\n\t\t}).field;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\tfunction applyViolationMessageToField(parameters, fieldPath, message) {\r\n\t\tvar object = findField(fieldPath, parameters, \"Error applying violation\");\r\n\t\t\r\n\t\tif (typeof message === \"string\" && \"validator\" in object) {\r\n\t\t\tobject.validator.isValid(false);\r\n\t\t\tobject.validator.message(message);\r\n\t\t}else{\r\n\t\t\tthrow new Error(\"Error applying violation\\n\"+fieldPath+\" is not validatable\\nit should be an observable\");\r\n\t\t}\r\n\t};\r\n\r\n\tfunction applyViolationMessageToValidatable(validatable, message) {\r\n\t\tvalidatable.validator.isValid(false);\r\n\t\tvar oldMessage = validatable.validator.message();\r\n\t\tvar newMessage = oldMessage.length == 0 ? message : oldMessage + \", \" + message;\r\n\t\tvalidatable.validator.message(newMessage);\r\n\t};\r\n\r\n\r\n\r\n\tfunction Validatable(name, parameters, constraintResolver){\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis.validator = new Validator();\r\n\t\tthis.validatableFields = [];\r\n\t\tthis.validatableParameters = parameters;\r\n\t\t\r\n\t\t\r\n\t\tinit: {\r\n\t\t\trecursivlyExtendParameters(self.validatableParameters, self.validatableFields);\r\n\t\t\tif(constraintResolver)\r\n\t\t\t\tconstraintResolver.applyValidationConstraints(name, self);\r\n\t\t}\r\n\t}\r\n\t\r\n\tValidatable.prototype.isValid = function () {\r\n\t\treturn this.validatableFields.every(function(constraint){\r\n\t\t\treturn constraint.validator && constraint.validator.isValid();\r\n\t\t}) && this.validator.isValid();\r\n\t};\r\n\t\t\r\n\tValidatable.prototype.applyViolations = function(violations){\r\n\t\tviolations.forEach(function(violation){\r\n\t\t\tvar message = violation.message;\r\n\t\t\tvar fieldName = violation.fieldName;\r\n\t\t\tif (fieldName.length > 0) {\r\n\t\t\t\t//one of the fields violates a constraint\r\n\t\t\t\tapplyViolationMessageToField(this.validatableParameters, fieldName, message);\r\n\t\t\t} else {\r\n\t\t\t\t//the validatable violates a constraint\r\n\t\t\t\tapplyViolationMessageToValidatable(this, message);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t};\r\n\t\r\n\tValidatable.prototype.applyConstraints = function(fields){\r\n\t\tvar parameters = this.validatableParameters;\r\n\t\t\r\n\t\tfields.forEach(function(field){\r\n\t\t\tvar fieldName = field.name;\r\n\t\t\tvar constraints = field.constraints;\r\n\t\t\t\r\n\t\t\tvar object = findField(fieldName, parameters, \"Error applying constraints to field\");\r\n\t\t\t\r\n\t\t\tif (ko.isObservable(object) && \"validator\" in object) {\r\n\t\t\t\tobject.validator.setConstraints(constraints);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Error applying constraints to field: \" + fieldName + \"\\n\" +\r\n\t\t\t\t\t\"It is not an observable or is not extended with a validator. \\n\" +\r\n\t\t\t\t\tfieldName + \"=`\" + ko.toJSON(object) + \"`\");\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\tValidatable.prototype.validate = function(){\r\n\t\tthis.validator.validate(true);\r\n\t\tif (this.validator.isValid()) {\r\n\t\t\tthis.validatableFields.forEach(function(constraint){\r\n\t\t\t\tvar validator = constraint.validator;\r\n\t\t\t\tif (validator) {\r\n\t\t\t\t\tvalidator.validate(constraint());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\tValidatable.prototype.clearValidationMessages = function () {\r\n\t\tthis.validator.reset();\r\n\t\tthis.validatableFields.forEach(function(constraint){\r\n\t\t\tvar validator = constraint.validator;\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.reset();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\treturn Validatable;\r\n});","\ndefine('ordnung/qvc/Executable',[\"ordnung/qvc/ExecutableResult\", \"ordnung/qvc/Validatable\", \"ordnung/utils\", \"knockout\"], function(ExecutableResult, Validatable, utils, ko){\r\n\r\n\tfunction Executable(name, type, parameters, callbacks, qvc){\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis.name;\r\n\t\tthis.type;\r\n\t\tthis.isBusy = ko.observable(false);\r\n\t\tthis.hasError = ko.observable(false);\r\n\t\tthis.result = new ExecutableResult();\r\n\t\t\r\n\t\tthis.parameters = {};\r\n\t\tthis.callbacks = {\r\n\t\t\tbeforeExecute: function () {},\r\n\t\t\tcanExecute: function(){return true;},\r\n\t\t\terror: function () {},\r\n\t\t\tsuccess: function () {},\r\n\t\t\tresult: function(){},\r\n\t\t\tcomplete: function () {}\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tthis.execute = function () {\r\n\t\t\tif (self.onBeforeExecute() === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tqvc.execute(self);\r\n\t\t};\r\n\r\n\t\tthis.onBeforeExecute = function () {\r\n\t\t\t\r\n\t\t\tif (self.isBusy()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.hasError(false);\r\n\t\t\t\r\n\t\t\tself.callbacks.beforeExecute();\r\n\t\t\t\r\n\t\t\tself.validate();\r\n\t\t\tif (!self.isValid()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (self.callbacks.canExecute() === false) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tself.isBusy(true);\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tthis.onError = function () {\r\n\t\t\tself.hasError(true);\r\n\t\t\tif(\"violations\" in self.result)\r\n\t\t\t\tself.applyViolations(self.result.violations);\r\n\t\t\tself.callbacks.error(self.result);\r\n\t\t};\r\n\r\n\t\tthis.onSuccess = function () {\r\n\t\t\tself.hasError(false);\r\n\t\t\tself.clearValidationMessages();\r\n\t\t\tself.callbacks.success(self.result);\r\n\t\t\tself.callbacks.result(self.result.result);\r\n\t\t};\r\n\r\n\t\tthis.onComplete = function () {\r\n\t\t\tif (!self.hasError()) {\r\n\t\t\t\tself.callbacks.complete(self.result);\r\n\t\t\t\tself.clearValidationMessages();\r\n\t\t\t}\r\n\t\t\tself.isBusy(false);\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tinit: {\r\n\t\t\tself.name = name;\r\n\t\t\tself.type = type;\r\n\t\t\tutils.extend(self.parameters, parameters);\r\n\t\t\tutils.extend(self.callbacks, callbacks);\r\n\t\t\tutils.extend(self, new Validatable(self.name, self.parameters, qvc.constraintResolver));\r\n\t\t}\r\n\t}\r\n\t\r\n\tExecutable.Command = \"command\";\r\n\tExecutable.Query = \"query\";\r\n\t\r\n\treturn Executable;\r\n});","\ndefine('ordnung/ajax',[], function(){\r\n\tfunction dataToParams(data){\r\n\t\tvar params = []\r\n\t\tfor(var key in data){\r\n\t\t\tvar value = data[key];\r\n\t\t\tparams.push(key + \"=\" + encodeURIComponent(value));\r\n\t\t}\r\n\t\treturn params.join(\"&\");\r\n\t}\r\n\r\n\tfunction addParamToUrl(url, name, value){\r\n\t\treturn url + (url.match(/\\?/) ? (url.match(/&$/) ? \"\" : \"&\") : \"?\") + encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\t}\r\n\r\n\tfunction addToPath(url, segment){\r\n\t\treturn url + (url.match(/\\/$/) ? \"\" : \"/\") + segment;\r\n\t}\r\n\r\n\r\n\tfunction ajax(url, object, method, callback){\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\r\n\t\tvar isPost = (method === \"POST\");\r\n\t\tvar data = null;\r\n\t\t\r\n\t\tif(object){\r\n\r\n\t\t\tif(isPost){\r\n\t\t\t\tdata = dataToParams(object);\r\n\t\t\t} else {\r\n\t\t\t\turl += \"?\" + dataToParams(object);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(isPost){\r\n\t\t\turl = addParamToUrl(url, \"cacheKey\", Math.floor(Math.random()*10000));\r\n\t\t}\r\n\r\n\t\txhr.open(isPost ? \"POST\" : \"GET\", url, true);\r\n\t\t\r\n\t\tif(isPost && data){\r\n\t\t\txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n\t\t\txhr.setRequestHeader(\"Content-length\", data.length);\r\n\t\t\txhr.setRequestHeader(\"Connection\", \"close\");\r\n\t\t}\r\n\t\t\r\n\t\txhr.onreadystatechange = function(){\r\n\t\t\tif(xhr.readyState == 4){\r\n\t\t\t\tcallback(xhr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\txhr.send(data);\r\n\t\treturn xhr;\r\n\t}\r\n\r\n\tajax.addParamToUrl = addParamToUrl;\r\n\tajax.addToPath = addToPath;\r\n\r\n\r\n\treturn ajax;\r\n});","\ndefine('ordnung/qvc/ConstraintResolver',[], function(){\r\n\r\n\r\n\tfunction findConstraint(name, constraints) {\r\n\t\tfor (var i = 0; i < constraints.length; i++) {\r\n\t\t\tif (constraints[i].name == name) {\r\n\t\t\t\treturn constraints[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction constraintsLoaded(name, fields){\r\n\t\tvar constraint = findConstraint(name, this.constraints);\r\n\t\tif(constraint){\r\n\t\t\tconstraint.validatables.forEach(function(validatable){\r\n\t\t\t\tvalidatable.applyConstraints(fields);\r\n\t\t\t});\r\n\t\t\tconstraint.fields = fields;\r\n\t\t\tconstraint.state = \"loaded\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction ConstraintResolver(qvc){\r\n\t\tthis.qvc = qvc;\r\n\t\tthis.constraints = [];\r\n\t}\r\n\t\r\n\tConstraintResolver.prototype.applyValidationConstraints = function(name, validatable){\r\n\t\tvar constraint = findConstraint(name, this.constraints);\r\n\t\tif(constraint == false){\r\n\t\t\tthis.constraints.push({\r\n\t\t\t\tname: name,\r\n\t\t\t\tstate: \"loading\",\r\n\t\t\t\tvalidatables: [validatable]\r\n\t\t\t});\r\n\t\t\tthis.qvc.loadConstraints(name, constraintsLoaded.bind(this));\r\n\t\t}else{\r\n\t\t\tif(constraint.state === \"loading\"){\r\n\t\t\t\tconstraint.validatables.push(validatable);\r\n\t\t\t}else{\r\n\t\t\t\tvalidatable.applyConstraints(constraint.fields);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn ConstraintResolver;\r\n});","\ndefine('ordnung/qvc',[\r\n\t\"ordnung/qvc/Executable\", \r\n\t\"ordnung/qvc/ExecutableResult\", \r\n\t\"ordnung/utils\", \r\n\t\"ordnung/ajax\",\r\n\t\"ordnung/qvc/ConstraintResolver\",\r\n\t\"knockout\", \r\n\t\"ordnung/qvc/koExtensions\"], \r\n\tfunction(\r\n\t\tExecutable,\r\n\t\tExecutableResult,\r\n\t\tutils,\r\n\t\tajax,\r\n\t\tConstraintResolver,\r\n\t\tko){\r\n\t\r\n\tfunction QVC(){\r\n\r\n\t\tvar qvc = this;\r\n\r\n\t\tthis.constraintResolver = new ConstraintResolver(qvc);\r\n\r\n\t\tthis.execute = function(executable){\r\n\t\t\tvar parameters = ko.toJS(executable.parameters);\r\n\t\t\tvar data = {\r\n\t\t\t\tparameters: JSON.stringify(parameters),\r\n\t\t\t\tcsrfToken: qvc.config.csrf\r\n\t\t\t};\r\n\t\t\tvar url = ajax.addToPath(qvc.config.baseUrl, executable.type + \"/\" + executable.name);\r\n\t\t\tajax(url, data, \"POST\", function (xhr) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\texecutable.result = new ExecutableResult(JSON.parse(xhr.responseText || \"{}\"));\r\n\t\t\t\t\tif (executable.result.success === true) {\r\n\t\t\t\t\t\texecutable.onSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texecutable.onError();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\texecutable.result = new ExecutableResult({exception: {message: xhr.responseText, cause: xhr}});\r\n\t\t\t\t\texecutable.onError();\r\n\t\t\t\t}\r\n\t\t\t\texecutable.onComplete();\r\n\t\t\t});\r\n\t\t\r\n\t\t};\r\n\t\t\r\n\t\tthis.loadConstraints = function(name, callback){\r\n\t\t\tvar url = ajax.addToPath(qvc.config.baseUrl, \"constraints/\" + name);\r\n\t\t\tajax(url, null, \"GET\", function(xhr){\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvar response = JSON.parse(xhr.responseText || \"{\\\"parameters\\\":[]}\");\r\n\t\t\t\t\t\tif(\"parameters\" in response == false){\r\n\t\t\t\t\t\t\tresponse.parameters = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tvar response = {parameters: []};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcallback(name, response.parameters);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t\r\n\t\tthis.config = {\r\n\t\t\tbaseUrl: \"/\",\r\n\t\t\tcsrf: \"\"\r\n\t\t}\r\n\t};\r\n\r\n\tvar qvc = new QVC();\r\n\t\r\n\tfunction createExecutable(name, type, parameters, callbacks){\r\n\t\tif(name == null || name.length == 0)\r\n\t\t\tthrow new Error(type + \" is missing name\\nA \" + type + \" must have a name!\\nusage: createCommand('name', [parameters, callbacks])\");\r\n\t\r\n\t\tvar executable = new Executable(name, type, parameters || {}, callbacks || {}, qvc);\r\n\t\tvar execute = executable.execute.bind(executable);\r\n\t\texecute.isValid = ko.computed(function(){return executable.isValid(); });\r\n\t\texecute.isBusy = ko.computed(function(){return executable.isBusy();});\r\n\t\texecute.hasError = ko.computed(function(){return executable.hasError();});\r\n\t\texecute.success = function(callback){\r\n\t\t\texecutable.callbacks.success = callback;\r\n\t\t\treturn execute;\r\n\t\t};\r\n\t\texecute.error = function(callback){\r\n\t\t\texecutable.callbacks.error = callback;\r\n\t\t\treturn execute;\r\n\t\t};\r\n\t\texecute.beforeExecute = function(callback){\r\n\t\t\texecutable.callbacks.beforeExecute = callback;\r\n\t\t\treturn execute;\r\n\t\t};\r\n\t\texecute.canExecute = function(callback){\r\n\t\t\texecutable.callbacks.canExecute = callback;\r\n\t\t\treturn execute;\r\n\t\t};\r\n\t\texecute.result = function(){\r\n\t\t\tif(arguments.length == 1){\r\n\t\t\t\texecutable.callbacks.result = arguments[0];\r\n\t\t\t\treturn execute;\r\n\t\t\t}\r\n\t\t\treturn executable.result.result;\r\n\t\t};\r\n\t\texecute.complete = function(callback){\r\n\t\t\texecutable.callbacks.complete = callback;\r\n\t\t\treturn execute;\r\n\t\t};\r\n\t\texecute.clearValidationMessages = executable.clearValidationMessages.bind(executable);\r\n\t\t\r\n\t\treturn execute;\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tcreateCommand: function(name, parameters, callbacks){\r\n\t\t\treturn createExecutable(name, Executable.Command, parameters, callbacks);\r\n\t\t},\r\n\t\tcreateQuery: function(name, parameters, callbacks){\r\n\t\t\treturn createExecutable(name, Executable.Query, parameters, callbacks);\r\n\t\t},\r\n\t\tconfig: function(config){\r\n\t\t\tutils.extend(qvc.config, config);\r\n\t\t}\r\n\t}\r\n});","\ndefine('ordnung/loader',[\"ordnung/utils\", \"knockout\"], function (utils, ko) {\r\n\treturn function (domElement) {\r\n\t\tutils.toArray((domElement || document.body).querySelectorAll(\"*[data-viewmodel]\")).forEach(function (target) {\r\n\t\t\tvar viewModelName = target.getAttribute(\"data-viewmodel\");\r\n\t\t\tvar initObject = target.getAttribute(\"data-initObject\");\r\n\t\t\tif (initObject && initObject.indexOf(\"{\") == 0) {\r\n\t\t\t\tinitObject = JSON.parse(initObject);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trequire([viewModelName], function (ViewModel) {\r\n\t\t\t\tvar viewModel = new ViewModel(initObject);\r\n\t\t\t\tko.applyBindings(viewModel, target);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n});","\ndefine('ordnung/proclaimWhen.js',[], function () {\r\n\r\n\tfunction publish(name, event, data) {\r\n\t\tevent.subscribers.forEach(function (item) {\r\n\t\t\titem.apply(item, data);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction subscribeTo(name, event, subscriber) {\r\n\t\tevent.subscribers.push(subscriber);\r\n\t}\r\n\t\r\n\tfunction unsubscribeTo(name, event, subscriber){\r\n\t\tvar index = event.subscribers.indexOf(subscriber);\r\n\t\tevent.subscribers.splice(index, 1);\r\n\t}\r\n\tfunction extendEvent(name, event){\r\n\t\tevent.subscribers = [];\r\n\r\n\t\tvar extendedEvent = function(){\r\n\t\t\tif(arguments.length == 1 && typeof arguments[0] === \"function\"){\r\n\t\t\t\tsubscribeTo(name, event, arguments[0]);\r\n\t\t\t}else{\r\n\t\t\t\tpublish(name, event, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\textendedEvent.dont = function(subscriber){\r\n\t\t\tunsubscribeTo(name, event, subscriber);\r\n\t\t};\r\n\r\n\t\treturn extendedEvent;\r\n\t}\r\n\t\r\n\tfunction extend(events){\r\n\t\tfor(var i in events){\r\n\t\t\tevents[i] = extendEvent(i, events[i]);\r\n\t\t}\r\n\t\treturn events;\r\n\t}\r\n\r\n\treturn {\r\n\t\textend: extend\r\n\t};\r\n\t\r\n});\r\n"]}